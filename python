تنزيل المكتبات :
import pandas as pd                 قراءة وتنظيف وتحليل البيانات
import numpy as np                          العمليات الرياضية والمصفوفات
import matplotlib.pyplot as plt           الرسم البياني الأساسي
import seaborn as sns                    الرسوم البيانية الإحصائية المتقدمة
from sklearn.linear_model import LinearRegression       خوارزميات تعلم الآلة وتحليل البيانات
import plotly.express as px                      الرسوم التفاعلية والمتقدمة على الويب
---------------------------------------------------------------------------------------------------

df = pd.read_csv('الملف.csv')         # من ملف CSV
pd.read_csv("desktop/spotify_top_1000_tracks.csv")     # من ملف Excel
------------------------------------------------------------------------------
استكشاف البيانات
df.head()           # عرض أول 5 صفوف
df.tail()           # عرض آخر 5 صفوف
df.shape            # عدد الصفوف والأعمدة
df.columns          # أسماء الأعمدة
df.info()          # قيم محددة # معلومات عن الأعمدة والأنواع
df.describe().ronud(2)   # إحصائيات وصفية للبيانات الرقمية         ""22
df.unique()                         الاسماء الموجودة في العمود الفريدة بدون التكرار
['اسم الجدول المحدد الي نبيه ']
df.['اسم الجدول الي نبيه'].value_counts()       عدد القيم المتكررة في جدول المحدد فيه
------------------------------------------------------------------------------------
الوصول للبيانات
df['عمود']                  # الوصول لعمود
df[['عمود1', 'عمود2']]      # أكثر من عمود
df.iloc[0]                  # صف حسب الموقع
df.loc[0]                   # صف حسب الفهرس
------------------------------------------------------------------------------------
فلترة البيانات
-df[df['العمود'] > 100]                       # شرط بسيط
-df[(df['A'] > 10) & (df['B'] < 50)]          # شروط متعددة
-df[df['العمود'].isin(['A', 'B'])]  لاستيراد البيانات
-df = df.drop('اسم_العمود', axis=1 or axis=0,inplace=false or true)
true =يطبق التغيرات
false=يرجع نسخة جديدة من بدون تغيرات
-df = df.drop(الرقم الي تبيه)
axix=0حذف صف
axix=1=حذف عمود
-df.dropna(how='all') حذف الصف الفارغ بالكامل (افضل شي)
-df.[df(['اسم الجدول الي تبيه تسوي علي فلترة]=='الاسم الي تبيه موجود فقط بالعمود']) &(df['اسم الجدول الي تبيه برضو'])]         تصفية مهمممممم
-df['اسم الجدول']=df['اسم الجدول'].str.upper()
-df['اسم الجدول']=df['اسم الجدول'].str.lower()
-df['اسم الجدول']=df['اسم الجدول'].str.replace()
df['اسم الجدول']=df['اسم الجدول'].str.title()
-df['اسم الجدول']=df['اسم الجدول'].str.round()
--------------------------------------------------------------------------------------
التعامل مع البيانات المفقودة
df.isnull().sum()          # "عدد القيم المفقودة في كل عمود   " 11
df.duplicated().sum()                 عدد البيانات التكرار
df.dropna()                # حذف الصفوف اللي فيها NaN
df.fillna(0)               # تعويض القيم المفقودة بـ 0
df.fillna(method='ffill') # تعبئة بالقيمة السابقة
df.fillna(0, inplace=True)
df.dropna(how='all') حذف الصف الفارغ بالكامل (افضل شي)
df.[df(['اسم الجدول الي تبيه تسوي علي فلترة]=='الاسم الي تبيه موجود فقط بالعمود']) &(df['اسم الجدول الي تبيه برضو'])]         تصفية مهمممممم
--------------------------------------------------------------------------------------------
التعديل على البيانات 
df['جديد'] = df['A'] + df['B']         # إنشاء عمود جديد
df['العمود_الجديد'] = None
df.rename(columns={'قديم': 'جديد'})    # تغيير اسم عمود
df.drop('عمود', axis=1)                # حذف عمود
-----------------------------------------------------------------------------------------------
التحليل الاقتصادي
df['عمود'].mean()       # المتوسط
df['عمود'].median()     # الوسيط
df['عمود'].mode()       # المنوال
df['عمود'].std()        # الانحراف المعياري
df['عمود'].value_counts() # التكرارات
 إنشاء داتا فريم بسيطة
df = pd.DataFrame({
    'العدد_1': [1, 2, 3],
    'العدد_2': [4, 5, 6]
})

# إضافة عمود جديد ناتج عن جمع العدد_1 والعدد_2
df['مجموع'] = df['العدد_1'] + df['العدد_2']
سواء جمع او طرح او ضرب او قسمة
-----------------------------------------------------------------------------------------------------
التجميع والتحليل
df.groupby('الفئة').mean()        # متوسط لكل فئة
df.groupby('الفئة').sum()         # مجموع لكل فئة
df.groupby('الفئة')['عمود'].count() # عدد القيم في عمود معين
df.concat([اسم الجدول,اسم الجدول,اسم الجدول])
اذا انتهيناء من تجميع البيانات المحددة نقوم بامر df_group
--------------------------------------------------------------------------------------------------------------
ترتيب الجداول 
df.sort_values(by='عمود')                       # ترتيب تصاعدي
df.sort_values(by='عمود', ascending=False)      # ترتيب تنازلي
-------------------------------------------------------------------------------------------------------------------
حفظ الملف بعد التعديل
df.to_csv' ('النتائج.csv, index=False) # حفظ إلى CSV
df.to_excel('النتائج.xlsx', index=False)     # حفظ إلى
------------------------------------------------------------------------------------------------------------------------------

الاوامر التي بتستخدم دائما
df.head()           # عرض أول 5 صفوف
df.tail()           # عرض آخر 5 صفوف
df.shape()            # عدد الصفوف والأعمدة
df.columns          # أسماء الأعمدة
df.sample()
df.info()          # قيم محددة # معلومات عن الأعمدة والأنواع
df.describe()   # إحصائيات وصفية للبيانات الرقمية         ""22
df.isnull().sum()          # "عدد القيم المفقودة في كل عمود   " 11
df.unique()                                الاسماء الموجودة في العمود الفريدة بدون التكرار
df.nunique()                               لاسماء الموجودة في العمود الفريدة بدون التكرار
df.['اسم الجدول الي نبيه'].value_counts()       عدد القيم المتكررة في جدول المحدد في
df.duplicated().sum()             عدد القيم المتكررة
df.corr                         يقيس نسبة الارتباط بين الاعمدة
print("عدد القيم الفريدة في كل عمود:")   print(df.nunique())
df.('اسم العمود الي تبيه').nunique()        في حال تريد اظهار عمود واحد فقط بعدد فردي
df.nlargest(10)                      اعلى 10 انواع
df.['اسم الجدول الي نبيه'].value_counts()        يظهر عدد القيم الموجودة في العمود
df.drop('اسم العمود او الصف',axis:0,1,inplace=true
0=صف
1:عمود
df.['اسم الجدول'].replace({"الحرف القديم":"1" ,  "الحرف القديم:"0"},inplace=True)
df.describe().T       في حال الاعمدة كانت كثير ,يقوم بعكس الاعمدة الى صفوف والصفوف الى اعمدة
1-sns.pairplot(data)
2-plot.show()
--------------------------------------------------------------------------------------
.plot.bar()

